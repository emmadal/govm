name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags that start with v (e.g., v1.0.0)

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21' # You can adjust this to your preferred Go version

      - name: Build binaries
        run: |
          # Create a directory for the binaries
          mkdir -p build

          # List of OSes and architectures to build for
          PLATFORMS=("linux/amd64" "linux/arm64" "linux/386" "darwin/amd64" "darwin/arm64")
          
          # Build for each platform
          for PLATFORM in "${PLATFORMS[@]}"; do
            OS="${PLATFORM%/*}"
            ARCH="${PLATFORM#*/}"
            
            echo "Building for $OS/$ARCH..."
            
            # Set environment variables for cross-compilation
            GOOS=$OS GOARCH=$ARCH go build -ldflags="-s -w" -o "build/govm_${OS}_${ARCH}" .
            
            if [ $? -ne 0 ]; then
              echo "Failed to build for $OS/$ARCH"
              exit 1
            fi
          done

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/govm_linux_amd64
            build/govm_linux_arm64
            build/govm_linux_386
            build/govm_darwin_amd64
            build/govm_darwin_arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
